# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-10-27 03:17
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.wagtailcore.blocks
import wagtail.wagtailcore.fields


class Migration(migrations.Migration):

    replaces = [('publish', '0002_auto_20171016_2348'), ('publish', '0003_auto_20171016_2355'), ('publish', '0004_publishedwork_generate_navigation'), ('publish', '0005_auto_20171017_0435'), ('publish', '0006_auto_20171027_0315')]

    dependencies = [
        ('publish', '0001_initial'),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='publishedwork',
            name='body',
        ),
        migrations.AlterField(
            model_name='publishedwork',
            name='summary',
            field=models.TextField(blank=True, help_text="This is shown at the top of the published work's own page and in search results.", null=True),
        ),
        migrations.CreateModel(
            name='PublishedWorkTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='publish.PublishedWork')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publish_publishedworktag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='publishedwork',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='publish.PublishedWorkTag', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='LongStory',
            fields=[
                ('publishedwork_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='publish.PublishedWork')),
                ('body', wagtail.wagtailcore.fields.StreamField((('chapter', wagtail.wagtailcore.blocks.StructBlock((('title', wagtail.wagtailcore.blocks.CharBlock(required=False)), ('text', wagtail.wagtailcore.blocks.RichTextBlock(required=True))))),))),
                ('generate_navigation', models.BooleanField(default=True, help_text='This determines whether a navigation menu for chapters will be generated for this page', verbose_name='Generate a navigation menu')),
            ],
            options={
                'abstract': False,
            },
            bases=('publish.publishedwork',),
        ),
        migrations.CreateModel(
            name='Poem',
            fields=[
                ('publishedwork_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='publish.PublishedWork')),
                ('body', wagtail.wagtailcore.fields.RichTextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('publish.publishedwork',),
        ),
        migrations.CreateModel(
            name='ShortStory',
            fields=[
                ('publishedwork_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='publish.PublishedWork')),
                ('body', wagtail.wagtailcore.fields.RichTextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('publish.publishedwork',),
        ),
    ]
